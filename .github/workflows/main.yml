name: Deploy to Ubuntu

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Generate .env file
        run: |
          echo "APIKEY=${{ secrets.APIKEY }}" >> .env
          echo "APPID=${{ secrets.APPID }}" >> .env
          echo "AUTHDOMAIN=${{ secrets.AUTHDOMAIN }}" >> .env
          echo "EMAIL=${{ secrets.EMAIL }}" >> .env
          echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env
          echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "MAIL_API_KEY=${{ secrets.MAIL_API_KEY }}" >> .env
          echo "MEASUREMENTID=${{ secrets.MEASUREMENTID }}" >> .env
          echo "MESSAGINGSENDERID=${{ secrets.MESSAGINGSENDERID }}" >> .env
          echo "MONGO_CONNECTION=${{ secrets.MONGO_CONNECTION }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "PROJECTID=${{ secrets.PROJECTID }}" >> .env
          echo "STORAGEBUCKET=${{ secrets.STORAGEBUCKET }}" >> .env
          echo "TOKEN_SECRET=${{ secrets.TOKEN_SECRET }}" >> .env
          echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> .env
          echo "TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }}" >> .env
          echo "TWILIO_SID=${{ secrets.TWILIO_SID }}" >> .env
          echo "SIGNUP_TOKEN_SECRET=${{ secrets.SIGNUP_TOKEN_SECRET }}" >> .env
          echo "OTP_TOKEN_SECRET=${{ secrets.OTP_TOKEN_SECRET }}" >> .env
          echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> .env
          echo "CREATE_PASSWORD_TOKEN=${{ secrets.CREATE_PASSWORD_TOKEN }}" >> .env
          echo "AUTHORIZATION_TOKEN=${{ secrets.AUTHORIZATION_TOKEN }}" >> .env
          echo "REFRESH_TOKEN=${{ secrets.REFRESH_TOKEN }}" >> .env
          echo "ADD_COMPANY_TOKEN=${{ secrets.ADD_COMPANY_TOKEN }}" >> .env
          echo "PACKAGE_TOKEN=${{ secrets.PACKAGE_TOKEN }}" >> .env
          echo "FULDMAGT_TOKEN=${{ secrets.FULDMAGT_TOKEN }}" >> .env
          echo "EMAIL_ID=${{ secrets.EMAIL_ID }}" >> .env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
          echo "FIRSEBASE_TYPE=${{ secrets.FIRSEBASE_TYPE }}" >> .env
          echo "FIRSEBASE_PROJECT_ID=${{ secrets.FIRSEBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }}" >> .env
          echo "FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }}" >> .env
          echo "FIREBASE_AUTH_URI=${{ secrets.FIREBASE_AUTH_URI }}" >> .env
          echo "FIREBASE_TOKEN_URI=${{ secrets.FIREBASE_TOKEN_URI }}" >> .env
          echo "FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}" >> .env
          echo "FIREBASE_CLIENT_X509_CERT_URL=${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}" >> .env
          echo "FIREBASE_UNIVERSE_DOMAIN=${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}" >> .env
          echo "GATEWAY_API_TOKEN=${{ secrets.GATEWAY_API_TOKEN }}" >> .env
          

      - name: rsync deployments
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete --exclude 'client' --exclude 'folders'
          path: .
          remote_path: /home/ubuntu/ef-API-Backend
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USERNAME }}
          remote_key: ${{ secrets.SERVER_PRIVATE_KEY }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          port: 22
          script: |            
            pm2 restart server
